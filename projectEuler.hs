import Control.Applicative ((<$>), pure)
import Control.Arrow ((&&&), first)
import Data.List
import Data.List.Extra (split)
import Data.Maybe (fromJust)
import Data.Ord (comparing)
import qualified Data.Set as S

{-
Multiples of 3 and 5
Problem 1

If we list all the natural numbers below 10 that are multiples of 3 or 5, we get 3, 5, 6 and 9. The sum of these multiples is 23.

Find the sum of all the multiples of 3 or 5 below 1000.
-}

problem1 = sum [x | x <- [1..999], x `mod` 3 == 0 || x `mod` 5 == 0]
-- Answer: 233168

{-
Even Fibonacci numbers
Problem 2

Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:

1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.
-}

-- great trick!
fib = 1:1:[a+b | (a,b) <- zip fib (tail fib)]
problem2 = fromIntegral $ sum $ [x | x <- takeWhile (< 4000000) fib, even x]
-- Answer: 4613732


{-
Largest prime factor
Problem 3

The prime factors of 13195 are 5, 7, 13 and 29.

What is the largest prime factor of the number 600851475143 ?
-}

-- not used, just for reference
prime x = all (\ y -> x `mod` y /= 0) [2..x-1]
smallestPrimeFactor x = head [y | y <- [2..x], x `mod` y == 0]
primeFactors x = if x == 1 then [] else let s = smallestPrimeFactor x in s : (primeFactors $ x `div` s)
problem3 = maximum $ primeFactors 600851475143
-- Answer: 6857


{-
Largest palindrome product
Problem 4

A palindromic number reads the same both ways. The largest palindrome made from the product of two 2-digit numbers is 9009 = 91 × 99.

Find the largest palindrome made from the product of two 3-digit numbers.
-}

isPalindrome x = x == reverse x
isPalindromeInt = isPalindrome . show :: Int -> Bool
problem4 = maximum [a*b | a <- [100..999], b <- [100..999], isPalindromeInt $ a*b]
-- Answer: 906609


{-
Smallest multiple
Problem 5

2520 is the smallest number that can be divided by each of the numbers from 1 to 10 without any remainder.

What is the smallest positive number that is evenly divisible by all of the numbers from 1 to 20?
-}

allEqual l = all (uncurry (==)) $ zip l $ tail l
--map primeFactors [1..20]
-- the list below was determined by hand from the response above
problem5 = product [2,2,2,2,3,3,5,7,11,13,17,19]
-- Answer: 232792560


{-
Sum square difference
Problem 6

The sum of the squares of the first ten natural numbers is,
12 + 22 + ... + 102 = 385

The square of the sum of the first ten natural numbers is,
(1 + 2 + ... + 10)2 = 552 = 3025

Hence the difference between the sum of the squares of the first ten natural numbers and the square of the sum is 3025 − 385 = 2640.

Find the difference between the sum of the squares of the first one hundred natural numbers and the square of the sum.
-}

square x = x * x
problem6 = square (sum [1..100]) - (sum $ map square [1..100])
-- Answer: 25164150


{-
10001st prime
Problem 7

By listing the first six prime numbers: 2, 3, 5, 7, 11, and 13, we can see that the 6th prime is 13.

What is the 10 001st prime number?
-}

primes = 2 : [i | i <- [3 ..], and [rem i p > 0 | p <- takeWhile ((<=i).(^2)) primes]]
problem7 = primes !! 10000
-- Answer: 104743


{-
Largest product in a series
Problem 8

The four adjacent digits in the 1000-digit number that have the greatest product are 9 × 9 × 8 × 9 = 5832.

73167176531330624919225119674426574742355349194934
[...]

Find the thirteen adjacent digits in the 1000-digit number that have the greatest product. What is the value of this product?

-}

adjacents n = map (take n) . takeWhile (\ l -> length l >= n) . tails
problem8Str = concat [
    "73167176531330624919225119674426574742355349194934"
  , "96983520312774506326239578318016984801869478851843"
  , "85861560789112949495459501737958331952853208805511"
  , "12540698747158523863050715693290963295227443043557"
  , "66896648950445244523161731856403098711121722383113"
  , "62229893423380308135336276614282806444486645238749"
  , "30358907296290491560440772390713810515859307960866"
  , "70172427121883998797908792274921901699720888093776"
  , "65727333001053367881220235421809751254540594752243"
  , "52584907711670556013604839586446706324415722155397"
  , "53697817977846174064955149290862569321978468622482"
  , "83972241375657056057490261407972968652414535100474"
  , "82166370484403199890008895243450658541227588666881"
  , "16427171479924442928230863465674813919123162824586"
  , "17866458359124566529476545682848912883142607690042"
  , "24219022671055626321111109370544217506941658960408"
  , "07198403850962455444362981230987879927244284909188"
  , "84580156166097919133875499200524063689912560717606"
  , "05886116467109405077541002256983155200055935729725"
  , "71636269561882670428252483600823257530420752963450"
  ]
digitsOfString :: String -> [Int]
digitsOfString = map (read . pure)
problem8 = maximum . map (product . digitsOfString) $ adjacents 13 $ problem8Str
-- Answer: 23514624000


{-
Special Pythagorean triplet
Problem 9

A Pythagorean triplet is a set of three natural numbers, a < b < c, for which,
a² + b² = c²

For example, 3² + 4² = 9 + 16 = 25 = 5².

There exists exactly one Pythagorean triplet for which a + b + c = 1000.
Find the product abc.
-}

pythagoreanTriplets m =
  [(a, b, c) | a <- [0 .. m], b <- [a+1 .. m],
   let c = m - a - b, c /= a && c /= b && a^2 + b^2 == c^2]
problem9 = (\ (a, b, c) -> a * b * c) $ head $ pythagoreanTriplets 1000
-- Answer: 31875000


{-
Summation of primes
Problem 10

The sum of the primes below 10 is 2 + 3 + 5 + 7 = 17.

Find the sum of all the primes below two million.
-}

sum' = foldl' (+) 0
problem10 = sum' $ takeWhile (< 2000000) primes
-- Answer: 142913828922


{-
Largest product in a grid
Problem 11

In the 20×20 grid below, four numbers along a diagonal line have been marked in red.

08 02 22 97 38 15 00 40 00 75 04 05 07 78 52 12 50 77 91 08
[...]

The product of these numbers is 26 × 63 × 78 × 14 = 1788696.

What is the greatest product of four adjacent numbers in the same direction (up, down, left, right, or diagonally) in the 20×20 grid?
-}

problem11Grid :: [[Int]]
problem11Grid = map (map read . words)
  [ "08 02 22 97 38 15 00 40 00 75 04 05 07 78 52 12 50 77 91 08"
  , "49 49 99 40 17 81 18 57 60 87 17 40 98 43 69 48 04 56 62 00"
  , "81 49 31 73 55 79 14 29 93 71 40 67 53 88 30 03 49 13 36 65"
  , "52 70 95 23 04 60 11 42 69 24 68 56 01 32 56 71 37 02 36 91"
  , "22 31 16 71 51 67 63 89 41 92 36 54 22 40 40 28 66 33 13 80"
  , "24 47 32 60 99 03 45 02 44 75 33 53 78 36 84 20 35 17 12 50"
  , "32 98 81 28 64 23 67 10 26 38 40 67 59 54 70 66 18 38 64 70"
  , "67 26 20 68 02 62 12 20 95 63 94 39 63 08 40 91 66 49 94 21"
  , "24 55 58 05 66 73 99 26 97 17 78 78 96 83 14 88 34 89 63 72"
  , "21 36 23 09 75 00 76 44 20 45 35 14 00 61 33 97 34 31 33 95"
  , "78 17 53 28 22 75 31 67 15 94 03 80 04 62 16 14 09 53 56 92"
  , "16 39 05 42 96 35 31 47 55 58 88 24 00 17 54 24 36 29 85 57"
  , "86 56 00 48 35 71 89 07 05 44 44 37 44 60 21 58 51 54 17 58"
  , "19 80 81 68 05 94 47 69 28 73 92 13 86 52 17 77 04 89 55 40"
  , "04 52 08 83 97 35 99 16 07 97 57 32 16 26 26 79 33 27 98 66"
  , "88 36 68 87 57 62 20 72 03 46 33 67 46 55 12 32 63 93 53 69"
  , "04 42 16 73 38 25 39 11 24 94 72 18 08 46 29 32 40 62 76 36"
  , "20 69 36 41 72 30 23 88 34 62 99 69 82 67 59 85 74 04 36 16"
  , "20 73 35 29 78 31 90 01 74 31 49 71 48 86 81 16 23 57 05 54"
  , "01 70 54 71 83 51 54 69 16 92 33 48 61 43 52 01 89 19 67 48"
  ]


both p (x, y) = p x && p y
addPair (x1, y1) (x2, y2) = (x1 + x2, y1 + y2)

problem11 = maximum $ map (product . pathValues problem11Grid) validPaths where
  pathValues grid = map (\ (x, y) -> grid !! y !! x)
  validPaths = filter (all inBounds) paths
  inBounds = both (\ c -> 0 <= c && c < 20)
  paths = concat [pathsFrom (x, y) | x <- [0 .. 20], y <- [0 .. 20]]
  pathsFrom pos = map (\ d -> path 4 d pos) directions
  directions = [(0, 1), (1, 0), (1, 1), (1, -1)] 
  path length v = take length . iterate (addPair v)
-- Answer: 70600674


{-
Highly divisible triangular number
Problem 12

The sequence of triangle numbers is generated by adding the natural numbers. So the 7th triangle number would be 1 + 2 + 3 + 4 + 5 + 6 + 7 = 28. The first ten terms would be:

1, 3, 6, 10, 15, 21, 28, 36, 45, 55, ...

Let us list the factors of the first seven triangle numbers:

     1: 1
     3: 1,3
     6: 1,2,3,6
    10: 1,2,5,10
    15: 1,3,5,15
    21: 1,3,7,21
    28: 1,2,4,7,14,28

We can see that 28 is the first triangle number to have over five divisors.

What is the value of the first triangle number to have over five hundred divisors?
-}

triangleNums = scanl1 (+) [1 ..]
factors n = concat $ [nub $ x:d:[] | x <- [1 .. bound], let (d, m) = n `divMod` x, m == 0]
  where bound = floor $ sqrt $ fromIntegral n
problem12 = head $ snd $ break (\ t -> length (factors t) > 500) triangleNums
-- Answer: 76576500


problem13Numbers =
  [ 37107287533902102798797998220837590246510135740250
  , 46376937677490009712648124896970078050417018260538
  , 74324986199524741059474233309513058123726617309629
  , 91942213363574161572522430563301811072406154908250
  , 23067588207539346171171980310421047513778063246676
  , 89261670696623633820136378418383684178734361726757
  , 28112879812849979408065481931592621691275889832738
  , 44274228917432520321923589422876796487670272189318
  , 47451445736001306439091167216856844588711603153276
  , 70386486105843025439939619828917593665686757934951
  , 62176457141856560629502157223196586755079324193331
  , 64906352462741904929101432445813822663347944758178
  , 92575867718337217661963751590579239728245598838407
  , 58203565325359399008402633568948830189458628227828
  , 80181199384826282014278194139940567587151170094390
  , 35398664372827112653829987240784473053190104293586
  , 86515506006295864861532075273371959191420517255829
  , 71693888707715466499115593487603532921714970056938
  , 54370070576826684624621495650076471787294438377604
  , 53282654108756828443191190634694037855217779295145
  , 36123272525000296071075082563815656710885258350721
  , 45876576172410976447339110607218265236877223636045
  , 17423706905851860660448207621209813287860733969412
  , 81142660418086830619328460811191061556940512689692
  , 51934325451728388641918047049293215058642563049483
  , 62467221648435076201727918039944693004732956340691
  , 15732444386908125794514089057706229429197107928209
  , 55037687525678773091862540744969844508330393682126
  , 18336384825330154686196124348767681297534375946515
  , 80386287592878490201521685554828717201219257766954
  , 78182833757993103614740356856449095527097864797581
  , 16726320100436897842553539920931837441497806860984
  , 48403098129077791799088218795327364475675590848030
  , 87086987551392711854517078544161852424320693150332
  , 59959406895756536782107074926966537676326235447210
  , 69793950679652694742597709739166693763042633987085
  , 41052684708299085211399427365734116182760315001271
  , 65378607361501080857009149939512557028198746004375
  , 35829035317434717326932123578154982629742552737307
  , 94953759765105305946966067683156574377167401875275
  , 88902802571733229619176668713819931811048770190271
  , 25267680276078003013678680992525463401061632866526
  , 36270218540497705585629946580636237993140746255962
  , 24074486908231174977792365466257246923322810917141
  , 91430288197103288597806669760892938638285025333403
  , 34413065578016127815921815005561868836468420090470
  , 23053081172816430487623791969842487255036638784583
  , 11487696932154902810424020138335124462181441773470
  , 63783299490636259666498587618221225225512486764533
  , 67720186971698544312419572409913959008952310058822
  , 95548255300263520781532296796249481641953868218774
  , 76085327132285723110424803456124867697064507995236
  , 37774242535411291684276865538926205024910326572967
  , 23701913275725675285653248258265463092207058596522
  , 29798860272258331913126375147341994889534765745501
  , 18495701454879288984856827726077713721403798879715
  , 38298203783031473527721580348144513491373226651381
  , 34829543829199918180278916522431027392251122869539
  , 40957953066405232632538044100059654939159879593635
  , 29746152185502371307642255121183693803580388584903
  , 41698116222072977186158236678424689157993532961922
  , 62467957194401269043877107275048102390895523597457
  , 23189706772547915061505504953922979530901129967519
  , 86188088225875314529584099251203829009407770775672
  , 11306739708304724483816533873502340845647058077308
  , 82959174767140363198008187129011875491310547126581
  , 97623331044818386269515456334926366572897563400500
  , 42846280183517070527831839425882145521227251250327
  , 55121603546981200581762165212827652751691296897789
  , 32238195734329339946437501907836945765883352399886
  , 75506164965184775180738168837861091527357929701337
  , 62177842752192623401942399639168044983993173312731
  , 32924185707147349566916674687634660915035914677504
  , 99518671430235219628894890102423325116913619626622
  , 73267460800591547471830798392868535206946944540724
  , 76841822524674417161514036427982273348055556214818
  , 97142617910342598647204516893989422179826088076852
  , 87783646182799346313767754307809363333018982642090
  , 10848802521674670883215120185883543223812876952786
  , 71329612474782464538636993009049310363619763878039
  , 62184073572399794223406235393808339651327408011116
  , 66627891981488087797941876876144230030984490851411
  , 60661826293682836764744779239180335110989069790714
  , 85786944089552990653640447425576083659976645795096
  , 66024396409905389607120198219976047599490197230297
  , 64913982680032973156037120041377903785566085089252
  , 16730939319872750275468906903707539413042652315011
  , 94809377245048795150954100921645863754710598436791
  , 78639167021187492431995700641917969777599028300699
  , 15368713711936614952811305876380278410754449733078
  , 40789923115535562561142322423255033685442488917353
  , 44889911501440648020369068063960672322193204149535
  , 41503128880339536053299340368006977710650566631954
  , 81234880673210146739058568557934581403627822703280
  , 82616570773948327592232845941706525094512325230608
  , 22918802058777319719839450180888072429661980811197
  , 77158542502016545090413245809786882778948721859617
  , 72107838435069186155435662884062257473692284509516
  , 20849603980134001723930671666823555245252804609722
  , 53503534226472524250874054075591789781264330331690
  ]
problem13 = read $ take 10 $ show $ sum problem13Numbers 
-- Answer: 5537376230


{-
Longest Collatz sequence
Problem 14

The following iterative sequence is defined for the set of positive integers:

n → n/2 (n is even)
n → 3n + 1 (n is odd)

Using the rule above and starting with 13, we generate the following sequence:
13 → 40 → 20 → 10 → 5 → 16 → 8 → 4 → 2 → 1

It can be seen that this sequence (starting at 13 and finishing at 1) contains 10 terms. Although it has not been proved yet (Collatz Problem), it is thought that all starting numbers finish at 1.

Which starting number, under one million, produces the longest chain?

NOTE: Once the chain starts the terms are allowed to go above one million.
-}

collatz = takeWhile ((/=) 1) . iterate next where
  next n
    | m == 0    = d
    | otherwise = 3*n + 1
    where (d, m) = n `divMod` 2
problem14 = fst $ maximumBy (comparing snd) lengths
  -- because this is quite slow, I limit the range of numbers I search
  where lengths = map (id &&& length . collatz) [850000 .. 900000]
-- Answer: 837799


{-
Lattice paths
Problem 15

Starting in the top left corner of a 2×2 grid, and only being able to move to the right and down, there are exactly 6 routes to the bottom right corner.

How many such routes are there through a 20×20 grid?
-}

-- | This approach uses memoization.
downRightRoutes sx sy = fromJust $ lookup (0, 0) values where
  coords = [(x, y) | x <- [0 .. sx], y <- [0 .. sy]]
  values = map (id &&& routes (\ c -> fromJust $ lookup c values)) coords
  routes r (x, y) = if x == sx || y == sy then 1 else r (x+1, y) + r (x, y+1)
problem15 = downRightRoutes 20 20
-- Answer: 137846528820


{-
Power digit sum
Problem 16

2^15 = 32768 and the sum of its digits is 3 + 2 + 7 + 6 + 8 = 26.

What is the sum of the digits of the number 2^1000?
-}
digitsOfNum = digitsOfString . show
problem16 = sum $ digitsOfNum $ 2^1000


{-
Number letter counts
Problem 17

If the numbers 1 to 5 are written out in words: one, two, three, four, five, then there are 3 + 3 + 5 + 4 + 4 = 19 letters used in total.

If all the numbers from 1 to 1000 (one thousand) inclusive were written out in words, how many letters would be used?

NOTE: Do not count spaces or hyphens. For example, 342 (three hundred and forty-two) contains 23 letters and 115 (one hundred and fifteen) contains 20 letters. The use of "and" when writing out numbers is in compliance with British usage.
-}

stringOfNum n = case n of
  0 -> "zero" 
  1 -> "one"
  2 -> "two"
  3 -> "three"
  4 -> "four"
  5 -> "five"
  6 -> "six"
  7 -> "seven" 
  8 -> "eight" 
  9 -> "nine" 
  10 -> "ten"
  11 -> "eleven" 
  12 -> "twelve" 
  13 -> "thirteen" 
  14 -> "fourteen"
  15 -> "fifteen" 
  16 -> "sixteen" 
  17 -> "seventeen" 
  18 -> "eighteen"
  19 -> "nineteen"
  20 -> "twenty" 
  30 -> "thirty" 
  40 -> "fourty" 
  50 -> "fifty"
  60 -> "sixty" 
  70 -> "seventy" 
  80 -> "eighty" 
  90 -> "ninety"
  _ -> if n >= 1000 then stringOfNum d3 ++ "thousand" ++ zero [] stringOfNum m3
      else if n >= 100 then stringOfNum d2 ++ "hundred" ++
                            zero [] ((++) "and" . stringOfNum) m2
      else stringOfNum (d1 * 10) ++ stringOfNum m1
 
  where zero z f x = if x == 0 then z else f x
        (d3, m3) = n `divMod` 1000
        (d2, m2) = n `divMod`  100
        (d1, m1) = n `divMod`   10
        
problem17 = sum $ map (length . stringOfNum) [1 .. 1000]
-- Answer: 21124


{-
Maximum path sum I
Problem 18

By starting at the top of the triangle below and moving to adjacent numbers on the row below, the maximum total from top to bottom is 23.

   3
  7 4
 2 4 6
8 5 9 3

That is, 3 + 7 + 4 + 9 = 23.

Find the maximum total from top to bottom of the triangle below:

75
95 64
[...]

NOTE: As there are only 16384 routes, it is possible to solve this problem by trying every route. However, Problem 67, is the same challenge with a triangle containing one-hundred rows; it cannot be solved by brute force, and requires a clever method! ;o)
-}

problem18Pyramid =
  [               "75"
  ,              "95 64"
  ,             "17 47 82"
  ,            "18 35 87 10"
  ,           "20 04 82 47 65"
  ,          "19 01 23 75 03 34"
  ,         "88 02 77 73 07 63 67"
  ,        "99 65 04 28 06 16 70 92"
  ,       "41 41 26 56 83 40 80 70 33"
  ,      "41 48 72 33 47 32 37 16 94 29"
  ,     "53 71 44 65 25 43 91 52 97 51 14"
  ,    "70 11 33 28 77 73 17 78 39 68 17 57"
  ,   "91 71 52 38 17 14 91 43 58 50 27 29 48"
  ,  "63 66 04 68 89 53 67 30 73 16 69 87 40 31"
  , "04 62 98 27 23 09 70 98 73 93 38 53 60 04 23"
  ]
problem18 = head $ foldr1 combine $ map (map read . words) problem18Pyramid where
  combine up down = zipWith (\ t (l, r) -> t + max l r) up $ zip (init down) (tail down)
-- Answer: 1074 


{-
Counting Sundays
Problem 19

You are given the following information, but you may prefer to do some research for yourself.

    1 Jan 1900 was a Monday.
    Thirty days has September,
    April, June and November.
    All the rest have thirty-one,
    Saving February alone,
    Which has twenty-eight, rain or shine.
    And on leap years, twenty-nine.
    A leap year occurs on any year evenly divisible by 4, but not on a century unless it is divisible by 400.

How many Sundays fell on the first of the month during the twentieth century (1 Jan 1901 to 31 Dec 2000)?
-}

isLeapYear y
  | y `mod` 400 == 0 = True
  | y `mod` 100 == 0 = False
  | y `mod`   4 == 0 = True
  |        otherwise = False

monthLens y = [31, if isLeapYear y then 29 else 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31]

problem19 = length $ filter (\ d -> d `mod` 7 == 6) monthFirsts 
  where monthFirsts = scanl (+) firstDay1901 $ concatMap monthLens [1901 .. 2000]
        firstDay1901 = sum $ monthLens 1900
-- Answer: 171


{-
Factorial digit sum
Problem 20

n! means n × (n − 1) × ... × 3 × 2 × 1

For example, 10! = 10 × 9 × ... × 3 × 2 × 1 = 3628800,
and the sum of the digits in the number 10! is 3 + 6 + 2 + 8 + 8 + 0 + 0 = 27.

Find the sum of the digits in the number 100!
-}

fac n = product [1 .. n]
problem20 = sum $ digitsOfNum $ fac 100
-- Answer: 648


{-
Amicable numbers
Problem 21

Let d(n) be defined as the sum of proper divisors of n (numbers less than n which divide evenly into n).
If d(a) = b and d(b) = a, where a ≠ b, then a and b are an amicable pair and each of a and b are called amicable numbers.

For example, the proper divisors of 220 are 1, 2, 4, 5, 10, 11, 20, 22, 44, 55 and 110; therefore d(220) = 284. The proper divisors of 284 are 1, 2, 4, 71 and 142; so d(284) = 220.

Evaluate the sum of all the amicable numbers under 10000.
-}

nubSort :: Ord a => [a] -> [a]
nubSort = S.toAscList . S.fromList

divisors n = filter (< n) $ nubSort $ concat
  [ [x, n `div` x] | x <- [1 .. limit], n `mod` x == 0]
  where limit = floor $ sqrt $ fromIntegral n
problem21 = sum [a | a <- [1 .. 10000], let b = d a, d b == a && a /= b]
  where d = sum . divisors
-- Answer: 31626


{-
Names scores
Problem 22

Using names.txt (right click and 'Save Link/Target As...'), a 46K text file containing over five-thousand first names, begin by sorting it into alphabetical order. Then working out the alphabetical value for each name, multiply this value by its alphabetical position in the list to obtain a name score.

For example, when the list is sorted into alphabetical order, COLIN, which is worth 3 + 15 + 12 + 9 + 14 = 53, is the 938th name in the list. So, COLIN would obtain a score of 938 × 53 = 49714.

What is the total of all the name scores in the file?
-}


problem22 = final . names <$> readFile "p022_names.txt"
  where names = map (tail . init) . split (== ',')
        final = sum . zipWith (\ i n -> i * score n) [1 ..] . sort
        score = sum . map (subtract (fromEnum 'A' - 1) . fromEnum)
-- Answer: 871198282


{-
Non-abundant sums
Problem 23

A perfect number is a number for which the sum of its proper divisors is exactly equal to the number. For example, the sum of the proper divisors of 28 would be 1 + 2 + 4 + 7 + 14 = 28, which means that 28 is a perfect number.

A number n is called deficient if the sum of its proper divisors is less than n and it is called abundant if this sum exceeds n.

As 12 is the smallest abundant number, 1 + 2 + 3 + 4 + 6 = 16, the smallest number that can be written as the sum of two abundant numbers is 24. By mathematical analysis, it can be shown that all integers greater than 28123 can be written as the sum of two abundant numbers. However, this upper limit cannot be reduced any further by analysis even though it is known that the greatest number that cannot be expressed as the sum of two abundant numbers is less than this limit.

Find the sum of all the positive integers which cannot be written as the sum of two abundant numbers.
-}

abundants = [x | x <- [1 ..], sum (divisors x) > x]
problem23 = sum $ S.toAscList $ S.fromAscList [1 .. 28123] S.\\ S.fromList
  [x + y | x <- takeWhile (<= 28123) abundants,
           y <- takeWhile (<= 28123 - x) abundants, y >= x]
-- Answer: 4179871


{-
Lexicographic permutations
Problem 24

A permutation is an ordered arrangement of objects. For example, 3124 is one possible permutation of the digits 1, 2, 3 and 4. If all of the permutations are listed numerically or alphabetically, we call it lexicographic order. The lexicographic permutations of 0, 1 and 2 are:

012   021   102   120   201   210

What is the millionth lexicographic permutation of the digits 0, 1, 2, 3, 4, 5, 6, 7, 8 and 9?
-}

numOfDigits = foldl (\ acc x -> x + 10*acc) 0
problem24 = numOfDigits $ sort (permutations [0 .. 9]) !! 999999


{-
1000-digit Fibonacci number
Problem 25

The Fibonacci sequence is defined by the recurrence relation:

    Fn = Fn−1 + Fn−2, where F1 = 1 and F2 = 1.

Hence the first 12 terms will be:

    F1 = 1
    F2 = 1
    F3 = 2
    F4 = 3
    F5 = 5
    F6 = 8
    F7 = 13
    F8 = 21
    F9 = 34
    F10 = 55
    F11 = 89
    F12 = 144

The 12th term, F12, is the first term to contain three digits.

What is the first term in the Fibonacci sequence to contain 1000 digits?
-}

problem25 = fst . head $ dropWhile ((< 1000) . length . digitsOfNum . snd) $ zip [1 ..] fib
-- Answer: 4782


{-
Reciprocal cycles
Problem 26

A unit fraction contains 1 in the numerator. The decimal representation of the unit fractions with denominators 2 to 10 are given:

    1/2	= 0.5
    1/3	= 0.(3)
    1/4	= 0.25
    1/5	= 0.2
    1/6	= 0.1(6)
    1/7	= 0.(142857)
    1/8	= 0.125
    1/9	= 0.(1)
    1/10= 0.1

Where 0.1(6) means 0.166666..., and has a 1-digit recurring cycle. It can be seen that 1/7 has a 6-digit recurring cycle.

Find the value of d < 1000 for which 1/d contains the longest recurring cycle in its decimal fraction part.
-}

-- | Return the longest init of a list with unique elements.
uncycle l = map snd $ takeWhile (not . fst) $ zip (unique l) l
  where unique l = zipWith S.member l $ scanl (flip S.insert) S.empty l


problem26 = snd $ maximum $ map (length . uncycle . tail . chain &&& id) [2 .. 999]
  where chain n = iterate (\ (d, m) -> (m * 10) `divMod` n) (0, 1)


{-
Quadratic primes
Problem 27

Euler discovered the remarkable quadratic formula:

n² + n + 41

It turns out that the formula will produce 40 primes for the consecutive values n = 0 to 39. However, when n = 40, 402 + 40 + 41 = 40(40 + 1) + 41 is divisible by 41, and certainly when n = 41, 41² + 41 + 41 is clearly divisible by 41.

The incredible formula  n² − 79n + 1601 was discovered, which produces 80 primes for the consecutive values n = 0 to 79. The product of the coefficients, −79 and 1601, is −126479.

Considering quadratics of the form:

    n² + an + b, where |a| < 1000 and |b| < 1000

    where |n| is the modulus/absolute value of n
    e.g. |11| = 11 and |−4| = 4

Find the product of the coefficients, a and b, for the quadratic expression that produces the maximum number of primes for consecutive values of n, starting with n = 0.
-}


problem27 = best $ [(consecutivePrimes $ f a b, (a, b)) | a <- r, b <- r] where
  r = [-1000 .. 1000]
  best = uncurry (*) . snd . maximum . map (first length)

  consecutivePrimes = takeWhile (\ x -> x `elem` takeWhile (<= x) primes)
  f a b = [n*n + a*n + b | n <- [0 ..]]
-- Answer: -59231


{-
Number spiral diagonals
Problem 28

Starting with the number 1 and moving to the right in a clockwise direction a 5 by 5 spiral is formed as follows:

21 22 23 24 25
20  7  8  9 10
19  6  1  2 11
18  5  4  3 12
17 16 15 14 13

It can be verified that the sum of the numbers on the diagonals is 101.

What is the sum of the numbers on the diagonals in a 1001 by 1001 spiral formed in the same way?
-}

problem28 = sum' $ scanl (+) 1 $ concatMap (replicate 4) [2, 4 .. 1000]
-- Answer: 669171001


{-
Distinct powers
Problem 29

Consider all integer combinations of ab for 2 ≤ a ≤ 5 and 2 ≤ b ≤ 5:

    22=4, 23=8, 24=16, 25=32
    32=9, 33=27, 34=81, 35=243
    42=16, 43=64, 44=256, 45=1024
    52=25, 53=125, 54=625, 55=3125

If they are then placed in numerical order, with any repeats removed, we get the following sequence of 15 distinct terms:

4, 8, 9, 16, 25, 27, 32, 64, 81, 125, 243, 256, 625, 1024, 3125

How many distinct terms are in the sequence generated by ab for 2 ≤ a ≤ 100 and 2 ≤ b ≤ 100?
-}

problem29 = length $ group $ sort [a^b | a <- [2 .. 100], b <- [2 .. 100]]
-- Answer: 9183


answers = zip [1 ..]
  [ problem1
  , problem2
  , problem3
  , problem4
  , problem5
  , problem6
  , problem7
  , problem8
  , problem9
  , problem10
  , problem11
  , problem12
  , problem13
  , problem14
  , problem15
  , problem16
  , problem17
  , problem18
  , problem19
  , problem20
  , problem21
  , 871198282  -- needs I/O
  , problem23
  , problem24
  , problem25
  , problem26
  , problem27
  , problem28
  , problem29
  ]
